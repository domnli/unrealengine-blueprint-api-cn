import{_ as r,r as o,o as l,c,a as e,d as a,F as s,b as n}from"./app.3a5b805e.js";var i="/unreal-buleprint-api/assets/line-trace-by-channel.647054fe.png";const h={},_=e("h1",{id:"linetracebychannel",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linetracebychannel","aria-hidden":"true"},"#"),n(" LineTraceByChannel")],-1),d=e("p",null,"Does a collision trace along the given line and returns the first blocking hit encountered. This trace finds the objects that RESPONDS to the given TraceChannel",-1),u=e("p",null,"Target is Kismet System Library",-1),p=e("p",null,[e("img",{src:i,alt:"line-trace-by-channel",width:"495"})],-1),b=n("\u53C2\u8003"),f=e("br",null,null,-1),g={href:"https://docs.unrealengine.com/4.27/en-US/BlueprintAPI/Collision/LineTraceByChannel/",target:"_blank",rel:"noopener noreferrer"},m=n("\u5B98\u65B9\u6587\u6863"),y=e("br",null,null,-1),T={href:"https://docs.unrealengine.com/4.27/zh-CN/InteractiveExperiences/Tracing/HowTo/SingleLineTraceByChannel/",target:"_blank",rel:"noopener noreferrer"},C=n("\u4F7F\u7528 Single Line Trace (Raycast) by Channel");function x(B,k){const t=o("ExternalLinkIcon");return l(),c(s,null,[_,d,u,p,e("p",null,[b,f,e("a",g,[m,a(t)]),y,e("a",T,[C,a(t)])])],64)}var L=r(h,[["render",x],["__file","line-trace-by-channel.html.vue"]]);export{L as default};
